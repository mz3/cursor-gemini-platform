name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  # Stage 1: Unit Tests (Parallel)
  unit-tests-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'
          cache-dependency-path: platform-api/package-lock.json

      - name: Install API dependencies
        run: npm ci
        working-directory: ./platform-api

      - name: Check API TypeScript compilation
        run: npx tsc --noEmit
        working-directory: ./platform-api

      - name: Run API unit tests
        run: npm run test:unit
        working-directory: ./platform-api

  unit-tests-ui:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'
          cache-dependency-path: platform-ui/package-lock.json

      - name: Install UI dependencies
        run: npm ci
        working-directory: ./platform-ui

      - name: Check UI TypeScript compilation
        run: npx tsc --noEmit
        working-directory: ./platform-ui

      - name: Build UI
        run: npm run build
        working-directory: ./platform-ui

      - name: Run UI unit tests
        run: npm test
        working-directory: ./platform-ui

  # Stage 2: Basic E2E Tests (Simplified)
  e2e-tests:
    runs-on: ubuntu-latest
    needs: [unit-tests-api, unit-tests-ui]
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: platform_user
          POSTGRES_PASSWORD: platform_password
          POSTGRES_DB: platform_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'
          cache-dependency-path: platform-ui/package-lock.json

      - name: Install UI dependencies
        run: npm ci
        working-directory: ./platform-ui

      - name: Install API dependencies
        run: npm ci
        working-directory: ./platform-api

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5433 -U platform_user; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Wait for Redis
        run: |
          until redis-cli -h localhost -p 6379 ping; do
            echo "Waiting for Redis..."
            sleep 2
          done

      - name: Start API server
        run: |
          cd platform-api
          npm run dev &
          API_PID=$!
          sleep 15
          echo "API server started with PID: $API_PID"
        env:
          NODE_ENV: test
          DB_HOST: localhost
          DB_PORT: 5433
          DB_USER: platform_user
          DB_PASSWORD: platform_password
          DB_NAME: platform_db
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          JWT_SECRET: test-jwt-secret-key
          API_PORT: 4000

      - name: Start UI server
        run: |
          cd platform-ui
          npm run dev &
          UI_PID=$!
          sleep 15
          echo "UI server started with PID: $UI_PID"

      - name: Run E2E tests
        run: npm run test:e2e:local
        working-directory: ./platform-ui
        env:
          CYPRESS_baseUrl: http://localhost:3000
          CYPRESS_apiUrl: http://localhost:4000
          CYPRESS_testEmail: admin@platform.com
          CYPRESS_testPassword: admin123

      - name: Upload E2E screenshots (on failure)
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: platform-ui/cypress/screenshots/
          if-no-files-found: ignore

      - name: Upload E2E videos (on failure)
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-videos
          path: platform-ui/cypress/videos/
          if-no-files-found: ignore
