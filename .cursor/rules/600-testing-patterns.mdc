---
description: running debugging and writing tests
alwaysApply: false
---
      - think: 1
      - get:
          url: "/api/entities/{{ entityId }}"
      - put:
          url: "/api/entities/{{ entityId }}"
          json:
            name: "Updated Entity {{ $randomString() }}"
      - delete:
          url: "/api/entities/{{ entityId }}"
```

### Memory Leak Testing
```typescript
// test/memory-leak.test.ts
describe('Memory Leak Tests', () => {
  it('should not leak memory during entity operations', async () => {
    const initialMemory = process.memoryUsage().heapUsed;

    // Perform many entity operations
    for (let i = 0; i < 1000; i++) {
      await createTestEntity();
      await deleteTestEntity();
    }

    const finalMemory = process.memoryUsage().heapUsed;
    const memoryIncrease = finalMemory - initialMemory;

    // Memory increase should be reasonable (less than 50MB)
    expect(memoryIncrease).toBeLessThan(50 * 1024 * 1024);
  });
});
```
